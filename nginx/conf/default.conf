# Modified version of your default.conf
server {
    listen 80;
    server_name analytics.gh.uz;  # Replace with your actual domain
    
    # # Allow certbot to verify domain ownership
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot;
    # }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name analytics.gh.uz;  # Replace with your actual domain
    
    # SSL certificates will be placed here by certbot
    ssl_certificate     /etc/nginx/certs/gh.uz.chain.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

# server {
#     listen 80;
#     server_name localhost;
#     client_max_body_size 100M;
#     # Add debug headers
    add_header X-Debug-Message "Request processed by Nginx" always;
    # Auth service endpoints
    location /auth/ {
        proxy_pass http://auth-service:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Menu endpoint (accessible to all authenticated users)
    location /menu {
        proxy_pass http://auth-service:8080/menu;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Admin endpoints (for authenticated admins only)
    location /admin {
        proxy_pass http://auth-service:8080/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
    }
    
    # Special endpoint to verify permissions without redirection
    location = /auth/verify {
        internal;
        proxy_pass http://auth-service:8080/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;
    }

    location /referal {

        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_user_name $upstream_http_x_user_name;
        auth_request_set $auth_user_id $upstream_http_x_user_id;
        auth_request_set $auth_user_admin $upstream_http_x_user_admin;
        auth_request_set $auth_user_full_name $upstream_http_x_user_full_name;
        auth_request_set $auth_user_roles $upstream_http_x_user_roles;

        proxy_pass http://referal:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Script-Name /referal;
        
        # Pass user information from auth-service to backend
        proxy_set_header X-User-Name $auth_user_name;
        proxy_set_header X-User-ID $auth_user_id;
        proxy_set_header X-User-Admin $auth_user_admin;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;

        # Debug header
        add_header X-Auth-Status $auth_status always;
    }

    # Update the plan-fact location
    location /plan-fact/ {
        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_user_name $upstream_http_x_user_name;
        auth_request_set $auth_user_id $upstream_http_x_user_id;
        auth_request_set $auth_user_admin $upstream_http_x_user_admin;
        auth_request_set $auth_user_full_name $upstream_http_x_user_full_name;
        auth_request_set $auth_user_roles $upstream_http_x_user_roles;
        
        proxy_pass http://plan-fact:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Pass user information
        proxy_set_header X-User-Name $auth_user_name;
        proxy_set_header X-User-ID $auth_user_id;
        proxy_set_header X-User-Admin $auth_user_admin;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;

        
        # Debug header
        add_header X-Auth-Status $auth_status always;
    }


    location /call-center/ {
        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_user_name $upstream_http_x_user_name;
        auth_request_set $auth_user_id $upstream_http_x_user_id;
        auth_request_set $auth_user_admin $upstream_http_x_user_admin;
        auth_request_set $auth_user_full_name $upstream_http_x_user_full_name;
        auth_request_set $auth_user_roles $upstream_http_x_user_roles;

        proxy_pass http://call-center-service:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Pass user information
        proxy_set_header X-User-Name $auth_user_name;
        proxy_set_header X-User-ID $auth_user_id;
        proxy_set_header X-User-Admin $auth_user_admin;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;

        # Debug header
        add_header X-Auth-Status $auth_status always;
    }
    


    # Update the discount-system location
    location /discount-system/ {
        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_user_name $upstream_http_x_user_name;
        auth_request_set $auth_user_id $upstream_http_x_user_id;
        auth_request_set $auth_user_admin $upstream_http_x_user_admin;
        auth_request_set $auth_user_full_name $upstream_http_x_user_full_name;
    auth_request_set $auth_user_roles $upstream_http_x_user_roles;

        proxy_pass http://discount-service:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Pass user information
        proxy_set_header X-User-Name $auth_user_name;
        proxy_set_header X-User-ID $auth_user_id;
        proxy_set_header X-User-Admin $auth_user_admin;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;

        # Debug header
        add_header X-Auth-Status $auth_status always;
    }
    
    location /calculators/ {
        auth_request /auth/verify;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_user_name $upstream_http_x_user_name;
        auth_request_set $auth_user_id $upstream_http_x_user_id;
        auth_request_set $auth_user_admin $upstream_http_x_user_admin;
        auth_request_set $auth_user_full_name $upstream_http_x_user_full_name;
        auth_request_set $auth_user_roles $upstream_http_x_user_roles;

        proxy_pass http://calculators-service:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Pass user information
        proxy_set_header X-User-Name $auth_user_name;
        proxy_set_header X-User-ID $auth_user_id;
        proxy_set_header X-User-Admin $auth_user_admin;
        proxy_set_header X-User-Full-Name $auth_user_full_name;
        proxy_set_header X-User-Full-Name-Encoding "base64";
        proxy_set_header X-User-Roles $auth_user_roles;

        # Debug header
        add_header X-Auth-Status $auth_status always;
    }
    

    # Root path redirects to menu
    location = / {
        return 302 /menu;
    }

    # Redirect to auth service for login if not authenticated
    error_page 401 = @error401;
    location @error401 {
        return 302 /auth/login?redirect=$request_uri;
    }
    
    # Handle forbidden errors
    error_page 403 = @error403;
    location @error403 {
        return 302 /auth/debug?redirect=$request_uri;
    }
}
